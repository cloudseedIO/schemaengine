[{"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2FIdentifier/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2FIdentifier/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"getUnique": {"map": "function (doc, meta) {\n    emit([doc.cloudPointHostId,doc.org,doc.docType,doc[doc[\"@identifier\"]].toLowerCase()], doc);\n  \n}"}}}, "meta": {"rev": "1-b20d47cb", "id": "_design/Identifier"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2FRole/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2FRole/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"RoleDetail": {"map": "function (doc, meta) {\n  if(doc.docType==\"Role\")\n  emit([doc.cloudPointHostId,meta.id], doc.access);\n}"}, "RoleOnSchema": {"map": "function (doc, meta) {\n  if(doc.docType==\"Role\"){\n  for(var i=0;i<doc.access.length;i++)\n    emit([doc.cloudPointHostId,meta.id,doc.access[i].schema], doc.access[i]);\n  }\n}"}, "allRoles": {"map": "function (doc, meta) {\n  if(doc.docType==\"Role\")\n    emit(doc.cloudPointHostId, {recordId:doc.recordId,roleName:doc.roleName});\n}"}, "summary": {"map": "function (doc, meta) {\n  if(doc.docType==\"Role\")\n    emit([doc.org?doc.org:\"public\",doc.roleType?doc.roleType:\"\",doc.cloudPointHostId,doc.roleName], {roleName:doc.roleName});\n}"}}}, "meta": {"rev": "1-8562f883", "id": "_design/Role"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2FSpecListProductCategoryProduct/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2FSpecListProductCategoryProduct/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"schedule": {"map": "\nfunction (doc, meta) {\n if(doc.docType==\"SpecListProductCategoryProduct\"){\n  emit([doc.SpecList,doc[\"$status\"]], meta.id);\n}\n\n}\n", "reduce": "function(key, values, rereduce){\n  if(!rereduce){\n  \tvar orgs = [];\n  \tfor(i=0; i<values.length; i++)\n  \t{\n  \t  if(orgs.indexOf(values[i])==-1)\n  \t  orgs.push(values[i]);\n  \t}\n  \treturn orgs;\n  }else{\n   \tvar orgs=[];\n    for(j=0;j<values.length;j++){\n      for(var k=0;k<values[j].length;k++){\n         if(orgs.indexOf(values[j][k])==-1)\n  \t  orgs.push(values[j][k]);\n      }\n    }\n    \n    return orgs;\n  }\n}"}, "summary": {"map": "function (doc, meta) {\n  if(doc.docType==\"SpecListProductCategoryProduct\"){\n    emit([doc.org], doc);\n    emit(meta.id,doc);\n  }\n}"}}}, "meta": {"rev": "1-89aa6ea9", "id": "_design/SpecListProductCategoryProduct"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2FSupplier/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2FSupplier/controller/setUpdateMinChanges"}, "doc": {"json": {"spatial": {"getByGeo": "function (doc) {\n  if (doc.docType==\"Supplier\" && typeof doc.geoLocation !=\"undefined\" && !isNaN(doc.geoLocation.longitude) && !isNaN(doc.geoLocation.latitude)) {\n       var geojson = {};\n      geojson.type = \"Point\";\n      geojson.coordinates = [doc.geoLocation.longitude*1, doc.geoLocation.latitude*1];\n    emit([geojson], {name:doc.name,cityName:doc.cityName});\n  }\n}"}}, "meta": {"rev": "1-dcb001c6", "id": "_design/Supplier"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2FTest/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2FTest/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"test3": {"map": "function (doc, meta) {\n/*  if((doc.docType==\"Manufacturer\" || \n      doc.docType==\"ProductCategory\" || \n      doc.docType==\"MfrProCat\" || \n      doc.docType==\"MfrProCatCity\" || \n      doc.docType==\"collection\" || \n      doc.docType==\"Supplier\" || \n      doc.docType==\"Provider\" || \n      doc.docType==\"Product\" || \n      doc.docType==\"ServiceProvider\" ) && \n     (!doc[\"@uniqueUserName\"] || doc[\"@uniqueUserName\"]==\"\") \n    doc.docType == \"Product\" &&){*/\n   if(doc.docType == \"collection\" && doc.Manufacturer==\"Manufacturer6c6d1a3c-574e-4e74-262d-76512e0c4649\"   ){\n  emit(1,doc)\n  }\n}\n\n"}, "test2": {"map": "function (doc, meta) {\n  if(doc.docType==\"Product\" && doc.Manufacturer== \"Manufacturer86608562-2649-9bdd-9714-7bd196a693b8\" && doc.productType ==\"OutdoorHotTub\" )\n    emit(1,doc);\n}"}, "dps": {"map": "function (doc, meta) {\n  if(doc.docType==\"Product\" && typeof doc.dependentProperties==\"object\" && doc.dependentProperties){\n\tvar keys=Object.keys(doc.dependentProperties);\n    for(var i=0;i<keys.length;i++)\n  \temit([doc.productType,keys[i],doc.dependentProperties[keys[i]]], 1);\n }\n  //emit([doc.docType,1,1],1)\n}", "reduce": "_count"}, "productPrices": {"map": "function(doc,meta){ \n  if(doc.docType ==\"Product\"){\n    emit(doc.Manufacturer,[meta.id,doc.name,doc.mfrProductNo?doc.mfrProductNo:\"NA\",doc.price?doc.price:\"NA\"]);\n  }\n  \n  \n}\n  \n  \n  "}, "NonWordCharsCheck": {"map": "function (doc, meta) {\n  \n  [\"name\",\"record_header\"].map(function(key){\n    if(typeof doc[key] ==\"string\")\n      if(doc[key].match(/\\\\|\\\"/g)){\n       emit(key, doc[key])\n      } \n  })\n}"}, "DataEntryCounts": {"map": "function (doc, meta) {\n  var author=\"\"\n  var editor=\"\";\n  if(doc.author==\"User0386d02e-ea97-8bd0-ee51-548be5ad94d7\"){author=\"hemalatha\"}\n  if(doc.editor==\"User0386d02e-ea97-8bd0-ee51-548be5ad94d7\"){editor=\"hemalatha\"}\n  \n  if(doc.author==\"Usercc12c27b-db71-7621-9f4f-d507cdb45ec9\"){author=\"indraja\"}\n  if(doc.editor==\"Usercc12c27b-db71-7621-9f4f-d507cdb45ec9\"){editor=\"indraja\"}\n  \n  if(doc.author==\"User0c2141a7-1e88-85b6-a0cd-386e288b351c\"){author=\"naveed\"}\n  if(doc.editor==\"User0c2141a7-1e88-85b6-a0cd-386e288b351c\"){editor=\"naveed\"}\n  \n  if(doc.author==\"Userdb51514d-2654-8f49-3e36-6d0735b02266\"){author=\"laxman\"}\n  if(doc.editor==\"Userdb51514d-2654-8f49-3e36-6d0735b02266\"){editor=\"laxman\"}\n  \n  if(doc.author==\"Usere0cd65a0-aac6-f3fc-492f-b5fdd7f627bc\"){author=\"rajesh\"}\n  if(doc.editor==\"Usere0cd65a0-aac6-f3fc-492f-b5fdd7f627bc\"){editor=\"rajesh\"}\n  \n  if(doc.author==\"User0da98d4c-92d9-333f-5a61-1de87eb92d49\"){author=\"rajani\"}\n  if(doc.editor==\"User0da98d4c-92d9-333f-5a61-1de87eb92d49\"){editor=\"rajani\"}\n  \n  if(doc.author==\"Userc40c041b-e8ac-b342-010e-44c1fb3494a7\"){author=\"sreekanth\"}\n  if(doc.editor==\"Userc40c041b-e8ac-b342-010e-44c1fb3494a7\"){editor=\"sreekanth\"}\n  \n  if(doc.author==\"User6832704f-e8ed-7424-2873-ffbd0e22c8cf\"){author=\"sunitha\"}\n  if(doc.editor==\"User6832704f-e8ed-7424-2873-ffbd0e22c8cf\"){editor=\"sunitha\"}\n  \n  if(doc.author==\"User5e996545-8035-d17c-5198-e951b88af985\"){author=\"ujwala\"}\n  if(doc.editor==\"User5e996545-8035-d17c-5198-e951b88af985\"){editor=\"ujwala\"}\n  \n  if(doc.author==\"User4eb9fc46-d991-7ad5-64d7-29f7bf6a552c\"){author=\"suresh\"}\n  if(doc.editor==\"User4eb9fc46-d991-7ad5-64d7-29f7bf6a552c\"){editor=\"suresh\"}\n  \n  if(doc.author==\"Useraf950533-f511-0f99-66c7-109ff3257321\"){author=\"renu\"}\n  if(doc.editor==\"Useraf950533-f511-0f99-66c7-109ff3257321\"){editor=\"renu\"}\n  \n  /*\n  if(doc.author==\"\"){author=\"\"}\n  if(doc.editor==\"\"){editor=\"\"}\n  */\n  \n  \n  if(author!=\"\"){\n   var ad=doc.dateCreated.split(\" \")[0].replace(/\\-/g,\"/\").split(\"/\")\n    emit([\"new\",author,ad[2],ad[1],ad[0]], 1);\n   }\n   if(editor!=\"\"){  \n   \tvar ed=doc.dateModified.split(\" \")[0].replace(/\\-/g,\"/\").split(\"/\")\n          emit([\"edited\",editor,ed[2],ed[1],ed[0]], 1);\n  }\n}", "reduce": "_count"}, "test": {"map": "/*function(doc,meta){ \n  if(doc.docType==\"SpecList\" || \n     doc.docType==\"SpecListProductCategory\" ||\n     doc.docType==\"SpecListDiscussion\" ||\n     doc.docType==\"SpecListPCProductDiscussion\" ||\n     doc.docType==\"SpecListPCProductDiscussionResponse\" ||\n     doc.docType==\"SpecListProductCategoryProduct\" ||    \n     doc.docType==\"MfrRFQ\"||    \n     doc.docType==\"MfrSideRFQ\"  ||\n       doc.docType==\"MFRProject\" ||\n       doc.docType==\"ContactMfr\"||\n       doc.docType==\"ContactMfrResponse\" ||\n       doc.docType==\"ContactMfrDiscussion\" ||\n       doc.docType==\"ContactMfrDiscussionResponse\" || \n     doc.docType==\"AreaTemplate\" ){\n\n    emit(doc.docType,doc);\n  }else if(doc.docType==\"AreaType\"  && doc.org!=\"public\"){\n     emit(doc.docType,doc);\n  }else if(doc.docType==\"UserRole\" && doc.org.indexOf(\"MFRProject\")>-1){\n    emit(doc.docType,doc); \n  }\n}\n  */\n/*function(doc,meta){\n  var userIds=[\"demoID\"];\n  for(var i=0;i<userIds.length;i++){\n    if(JSON.stringify(doc).indexOf(userIds[i])>-1){\n \temit(doc.docType,doc);\n      break;\n    }\n  }\n}*/\nfunction(doc,meta){\n  \n /* if(doc.docType==\"Product\" && Array.isArray(doc.productImages) && doc.productImages.length==1){\n    \tif(doc.productImages[0].variant &&doc.productImages[0].variant!=\"\")\n\t//  emit(doc[\"@uniqueUserName\"],doc.productImages[0].variant); \n          emit(1,doc);\n  }*/\n  if(doc.docType==\"Country\" ){//&& (doc.profileImage[0].caption!=doc.name)){\n       emit(1,doc);\t\n  }\n\n}\n  \n/*function (doc,meta) {\n  var a=doc.docType;\n  if(a==\"Manufacturer\" || \n     a==\"Supplier\" || \n     a==\"Provider\" || \n     a==\"ServiceProvider\" || \n     a==\"Developer\" || \n     a==\"Builder\" || \n     a==\"Organization\"){\n    if(!doc.odFlag)\n    emit(1,doc);\n  }\n}*/"}, "Counts": {"map": "function (doc, meta) {\n  if(doc.docType==\"ProductCategory\"){\n  \temit([doc.productType,doc.$status,doc.esMeta], 1);\n   \n }\n  emit([doc.docType,doc[\"$status\"],doc.cityName],1)\n}", "reduce": "_count"}, "summary": {"map": "function (doc, meta) {\n  if(doc.docType==\"Test\")\n  emit([doc.org], doc);\n}"}, "siteMap": {"map": "function (doc, meta) {\n  /*if(doc.docType==\"MfrProCatCity\"){\n    emit(\"https://www.wishkarma.com/d/ProductsbyLocation/\"+doc.mfrprocatcity.replace(/\\s/g,\"\")+\"/\"+meta.id+\"?&s=MfrProCatCity\");\n  }*/\n  /*if(doc.docType==\"ProductCategory\"){\n    emit(\"https://www.wishkarma.com/d/ProductCategories/\"+doc.categoryName.replace(/\\s/g,\"\")+\"/\"+meta.id+\"?&s=ProductCategory\");\n  }*/\n  if(doc.docType==\"MfrProCatCitySupplier\"){\n  \nemit([doc.ProductCategory,doc.City,doc.categoryName+\" \"+doc.cityName],1)  \n  \n  }\n}"}}}, "meta": {"rev": "1-018337f0", "id": "_design/Test"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2FUpdationScriptViews/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2FUpdationScriptViews/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"recordId": {"map": "function (doc, meta) {\n  emit(meta.id, null);\n}"}, "nocolor": {"map": "/*doc.productType==\"Fabric\" ||\ndoc.productType==\"Laminate\" ||\ndoc.productType==\"Veneer\" ||\ndoc.productType==\"Flooring\" ||\n\t\ndoc.docType==\"Product\" && \n\t\t   (doc.productType==\"FloorTile\" ||\n\t\t\tdoc.productType==\"WallTile\" ||\n\t\t\tdoc.productType==\"Wallpapers\" ||\n\t\t\tdoc.productType==\"NaturalStone\" ||\n\t\t\tdoc.productType==\"Plywood\" )\n*/\nfunction (doc, meta) {\n   if(Array.isArray(doc.productImages)){\n\t   //if(!dependentProperties.color)\n     for(var i=0 ;i< doc.productImages.length;i++)\n       if(doc.productImages[i].dependentProperties)\n  \temit(1,doc);\n  }\n}"}, "dateUpdate": {"map": "function (doc, meta) {\n  if(doc.dateCreated.match(/\\d\\d\\/\\d\\d\\/\\d\\d\\d\\d\\s\\d\\d:\\d\\d IST/) || \n    doc.dateModified.match(/\\d\\d\\/\\d\\d\\/\\d\\d\\d\\d\\s\\d\\d:\\d\\d IST/) )\n  emit(doc.dateCreated,doc);\n}"}}}, "meta": {"rev": "1-6f3ce5ce", "id": "_design/UpdationScriptViews"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2FUser/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2FUser/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"UserByEmail": {"map": "function (doc, meta) {\n  if(doc.docType==\"User\")\n    emit(doc.email.toLowerCase(), doc);\n} "}, "UserPassword": {"map": "function (doc, meta) {\n  if(doc.docType==\"User\" && doc.loginId!=\"\")\n    emit(doc.loginId, {loginPassword:doc.loginPassword});\n} "}, "uniqueUserName": {"map": "function (doc, meta) {\n  if(doc[\"@uniqueUserName\"]){\n  \temit(doc[\"@uniqueUserName\"].toUpperCase().trim(),meta.id);\n  }\n}"}, "userStatus": {"map": "function (doc, meta) {\n    if(doc.docType==\"User\"){\n      emit(doc.dateCreated, {loggedInCount:doc.loggedInCount,lastLoggedIn:doc.lastLoggedIn,email:doc.email,name:doc.givenName+\" \"+doc.familyName});\n    }\n}"}, "summary": {"map": "function (doc, meta) {\n  if(doc.docType==\"User\"){\n    var value= {\"image\":doc.image,\"givenName\":doc.givenName,\"familyName\":doc.familyName,\"email\":doc.email,\"socialIdentity\":doc.socialIdentity,\"createdVia\":doc.createdVia,\"subscribe\":doc.subscribe,\"notify\":doc.notify}\n   emit([\"public\",doc.givenName],value);\n  emit([\"admin\",doc.givenName],value);\n    emit(meta.id,value);\n  \n     }\n}"}, "getUniqueUserName": {"map": "function (doc, meta) {\n  if(doc[\"@uniqueUserName\"]){\n  \temit(meta.id,doc[\"@uniqueUserName\"]);\n  }\n}"}, "UserImage": {"map": "function (doc, meta) {\n  if(doc.docType==\"User\")\n    emit(doc.recordId, {image:doc.image});\n} "}, "UserDetail": {"map": "function (doc, meta) {\n  if(doc.docType==\"User\")\n    emit(meta.id, {\"givenName\":doc.givenName,\"familyName\":doc.familyName,\"about\":doc.about,\"email\":doc.email,\"telephone\":doc.telephone,\"address\":doc.address,\"image\":doc.image,\"coverImage\":doc.coverImage});\n} "}, "UserByLoginId": {"map": "function (doc, meta) { \n  if(doc.docType==\"User\" && doc.loginId && doc.loginId!=\"\") \n    emit(doc.loginId, doc);\n} \n"}}}, "meta": {"rev": "1-17ebb29e", "id": "_design/User"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2FUserRole/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2FUserRole/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"allUserRoles": {"map": "function (doc, meta) {\n  if(doc.docType==\"UserRole\")\n    if(Array.isArray(doc.roles)){\n       emit([doc.cloudPointHostId,doc.User], {org:doc.org,roles:doc.roles});\n    }else{\n       emit([doc.cloudPointHostId,doc.User], {org:doc.org,roles:[doc.roles]});\n    }\n}\n"}, "allOrgs": {"map": "function (doc, meta) {\n  if(doc.docType==\"UserRole\" && doc.org)\n    emit([doc.cloudPointHostId],doc.org);\n}", "reduce": "function(key, values, rereduce){\n  if(!rereduce){\n  \tvar orgs = [];\n  \tfor(i=0; i<values.length; i++)\n  \t{\n  \t  if(orgs.indexOf(values[i])==-1)\n  \t  orgs.push(values[i]);\n  \t}\n  \treturn orgs;\n  }else{\n   \tvar orgs=[];\n    for(j=0;j<values.length;j++){\n      for(var k=0;k<values[j].length;k++){\n         if(orgs.indexOf(values[j][k])==-1)\n  \t  orgs.push(values[j][k]);\n      }\n    }\n    \n    return orgs;\n  }\n}"}, "summary": {"map": "function (doc, meta) {\n  if(doc.docType==\"UserRole\"){\n    var value= {User:doc.User,org:doc.org,\n                roles:doc.roles,\n                \"@uniqueUserName\":doc[\"@uniqueUserName\"],\n                record_header:doc.record_header}\n    \n        emit([doc.org?doc.org:\"public\",doc.org],value);\n    if(doc[\"$status\"]==\"published\" && doc.org!=\"public\"){\n     \temit([\"public\",doc.org],value); \n    }\n    emit(meta.id,value);\n    \n  }\n} \n"}, "UserRoles": {"map": "function (doc, meta) {\n  if(doc.docType==\"UserRole\" && doc[\"$status\"]==\"published\"){\n    if(Array.isArray(doc.roles)){\n      emit([doc.cloudPointHostId,doc.User], {org:doc.org,roles:doc.roles});\n     }else{\n      emit([doc.cloudPointHostId,doc.User], {org:doc.org,roles:[doc.roles]});\n    }\n  }\n}\n"}, "UserRolesOnOrg": {"map": "function (doc, meta) {\n  if(doc.docType==\"UserRole\" && doc[\"$status\"]==\"published\")\n    if(Array.isArray(doc.roles)){\n     emit([doc.cloudPointHostId,doc.User,doc.org], doc.roles);\n    }else{\n      emit([doc.cloudPointHostId,doc.User,doc.org], [doc.roles]);\n    }\n}"}}}, "meta": {"rev": "1-9e892866", "id": "_design/UserRole"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fcommon/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fcommon/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"removeRecords": {"map": "function (doc, meta) {\n  emit(doc[\"@derivedObjName\"] ,doc.recordId);\n}"}}}, "meta": {"rev": "1-6c638d7e", "id": "_design/common"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fdev_Supplier/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fdev_Supplier/controller/setUpdateMinChanges"}, "doc": {"json": {"spatial": {"getByGeo": "function (doc) {\n  if (doc.docType==\"Supplier\" && typeof doc.geoLocation !=\"undefined\" && !isNaN(doc.geoLocation.longitude) && !isNaN(doc.geoLocation.latitude)) {\n       var geojson = {};\n      geojson.type = \"Point\";\n      geojson.coordinates = [doc.geoLocation.longitude*1, doc.geoLocation.latitude*1];\n    emit([geojson], {name:doc.name,cityName:doc.cityName});\n  }\n}"}}, "meta": {"rev": "1-006e5e36", "id": "_design/dev_Supplier"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fdev_Test/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fdev_Test/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"test3": {"map": "function (doc, meta) {\n/*  if((doc.docType==\"Manufacturer\" || \n      doc.docType==\"ProductCategory\" || \n      doc.docType==\"MfrProCat\" || \n      doc.docType==\"MfrProCatCity\" || \n      doc.docType==\"collection\" || \n      doc.docType==\"Supplier\" || \n      doc.docType==\"Provider\" || \n      doc.docType==\"Product\" || \n      doc.docType==\"ServiceProvider\" ) && \n     (!doc[\"@uniqueUserName\"] || doc[\"@uniqueUserName\"]==\"\") \n    doc.docType == \"Product\" &&){*/\n   if(doc.docType == \"collection\" && doc.Manufacturer==\"Manufacturer6c6d1a3c-574e-4e74-262d-76512e0c4649\"   ){\n  emit(1,doc)\n  }\n}\n\n"}, "test2": {"map": "function (doc, meta) {\n  if(doc.docType==\"Product\" && doc.Manufacturer== \"Manufacturer86608562-2649-9bdd-9714-7bd196a693b8\" && doc.productType ==\"OutdoorHotTub\" )\n    emit(1,doc);\n}"}, "dps": {"map": "function (doc, meta) {\n  if(doc.docType==\"Product\" && typeof doc.dependentProperties==\"object\" && doc.dependentProperties){\n\tvar keys=Object.keys(doc.dependentProperties);\n    for(var i=0;i<keys.length;i++)\n  \temit([doc.productType,keys[i],doc.dependentProperties[keys[i]]], 1);\n }\n  //emit([doc.docType,1,1],1)\n}", "reduce": "_count"}, "productPrices": {"map": "function(doc,meta){ \n  if(doc.docType ==\"Product\"){\n    emit(doc.Manufacturer,[meta.id,doc.name,doc.mfrProductNo?doc.mfrProductNo:\"NA\",doc.price?doc.price:\"NA\"]);\n  }\n  \n  \n}\n  \n  \n  "}, "NonWordCharsCheck": {"map": "function (doc, meta) {\n  \n  [\"name\",\"record_header\"].map(function(key){\n    if(typeof doc[key] ==\"string\")\n      if(doc[key].match(/\\\\|\\\"/g)){\n       emit(key, doc[key])\n      } \n  })\n}"}, "DataEntryCounts": {"map": "function (doc, meta) {\n  var author=\"\"\n  var editor=\"\";\n  if(doc.author==\"User0386d02e-ea97-8bd0-ee51-548be5ad94d7\"){author=\"hemalatha\"}\n  if(doc.editor==\"User0386d02e-ea97-8bd0-ee51-548be5ad94d7\"){editor=\"hemalatha\"}\n  \n  if(doc.author==\"Usercc12c27b-db71-7621-9f4f-d507cdb45ec9\"){author=\"indraja\"}\n  if(doc.editor==\"Usercc12c27b-db71-7621-9f4f-d507cdb45ec9\"){editor=\"indraja\"}\n  \n  if(doc.author==\"User0c2141a7-1e88-85b6-a0cd-386e288b351c\"){author=\"naveed\"}\n  if(doc.editor==\"User0c2141a7-1e88-85b6-a0cd-386e288b351c\"){editor=\"naveed\"}\n  \n  if(doc.author==\"Userdb51514d-2654-8f49-3e36-6d0735b02266\"){author=\"laxman\"}\n  if(doc.editor==\"Userdb51514d-2654-8f49-3e36-6d0735b02266\"){editor=\"laxman\"}\n  \n  if(doc.author==\"Usere0cd65a0-aac6-f3fc-492f-b5fdd7f627bc\"){author=\"rajesh\"}\n  if(doc.editor==\"Usere0cd65a0-aac6-f3fc-492f-b5fdd7f627bc\"){editor=\"rajesh\"}\n  \n  if(doc.author==\"User0da98d4c-92d9-333f-5a61-1de87eb92d49\"){author=\"rajani\"}\n  if(doc.editor==\"User0da98d4c-92d9-333f-5a61-1de87eb92d49\"){editor=\"rajani\"}\n  \n  if(doc.author==\"Userc40c041b-e8ac-b342-010e-44c1fb3494a7\"){author=\"sreekanth\"}\n  if(doc.editor==\"Userc40c041b-e8ac-b342-010e-44c1fb3494a7\"){editor=\"sreekanth\"}\n  \n  if(doc.author==\"User6832704f-e8ed-7424-2873-ffbd0e22c8cf\"){author=\"sunitha\"}\n  if(doc.editor==\"User6832704f-e8ed-7424-2873-ffbd0e22c8cf\"){editor=\"sunitha\"}\n  \n  if(doc.author==\"User5e996545-8035-d17c-5198-e951b88af985\"){author=\"ujwala\"}\n  if(doc.editor==\"User5e996545-8035-d17c-5198-e951b88af985\"){editor=\"ujwala\"}\n  \n  if(doc.author==\"User4eb9fc46-d991-7ad5-64d7-29f7bf6a552c\"){author=\"suresh\"}\n  if(doc.editor==\"User4eb9fc46-d991-7ad5-64d7-29f7bf6a552c\"){editor=\"suresh\"}\n  \n  if(doc.author==\"Useraf950533-f511-0f99-66c7-109ff3257321\"){author=\"renu\"}\n  if(doc.editor==\"Useraf950533-f511-0f99-66c7-109ff3257321\"){editor=\"renu\"}\n  \n  /*\n  if(doc.author==\"\"){author=\"\"}\n  if(doc.editor==\"\"){editor=\"\"}\n  */\n  \n  \n  if(author!=\"\"){\n   var ad=doc.dateCreated.split(\" \")[0].replace(/\\-/g,\"/\").split(\"/\")\n    emit([\"new\",author,ad[2],ad[1],ad[0]], 1);\n   }\n   if(editor!=\"\"){  \n   \tvar ed=doc.dateModified.split(\" \")[0].replace(/\\-/g,\"/\").split(\"/\")\n          emit([\"edited\",editor,ed[2],ed[1],ed[0]], 1);\n  }\n}", "reduce": "_count"}, "test": {"map": "/*function(doc,meta){ \n  if(doc.docType==\"SpecList\" || \n     doc.docType==\"SpecListProductCategory\" ||\n     doc.docType==\"SpecListDiscussion\" ||\n     doc.docType==\"SpecListPCProductDiscussion\" ||\n     doc.docType==\"SpecListPCProductDiscussionResponse\" ||\n     doc.docType==\"SpecListProductCategoryProduct\" ||    \n     doc.docType==\"MfrRFQ\"||    \n     doc.docType==\"MfrSideRFQ\"  ||\n       doc.docType==\"MFRProject\" ||\n       doc.docType==\"ContactMfr\"||\n       doc.docType==\"ContactMfrResponse\" ||\n       doc.docType==\"ContactMfrDiscussion\" ||\n       doc.docType==\"ContactMfrDiscussionResponse\" || \n     doc.docType==\"AreaTemplate\" ){\n\n    emit(doc.docType,doc);\n  }else if(doc.docType==\"AreaType\"  && doc.org!=\"public\"){\n     emit(doc.docType,doc);\n  }else if(doc.docType==\"UserRole\" && doc.org.indexOf(\"MFRProject\")>-1){\n    emit(doc.docType,doc); \n  }\n}\n  */\n/*function(doc,meta){\n  var userIds=[\"demoID\"];\n  for(var i=0;i<userIds.length;i++){\n    if(JSON.stringify(doc).indexOf(userIds[i])>-1){\n \temit(doc.docType,doc);\n      break;\n    }\n  }\n}*/\nfunction(doc,meta){\n  \n /* if(doc.docType==\"Product\" && Array.isArray(doc.productImages) && doc.productImages.length==1){\n    \tif(doc.productImages[0].variant &&doc.productImages[0].variant!=\"\")\n\t//  emit(doc[\"@uniqueUserName\"],doc.productImages[0].variant); \n          emit(1,doc);\n  }*/\n  if(doc.docType==\"Country\" ){//&& (doc.profileImage[0].caption!=doc.name)){\n       emit(1,doc);\t\n  }\n\n}\n  \n/*function (doc,meta) {\n  var a=doc.docType;\n  if(a==\"Manufacturer\" || \n     a==\"Supplier\" || \n     a==\"Provider\" || \n     a==\"ServiceProvider\" || \n     a==\"Developer\" || \n     a==\"Builder\" || \n     a==\"Organization\"){\n    if(!doc.odFlag)\n    emit(1,doc);\n  }\n}*/"}, "Counts": {"map": "function (doc, meta) {\n  if(doc.docType==\"ProductCategory\"){\n  \temit([doc.productType,doc.$status,doc.esMeta], 1);\n   \n }\n  emit([doc.docType,doc[\"$status\"],doc.cityName],1)\n}", "reduce": "_count"}, "summary": {"map": "function (doc, meta) {\n  if(doc.docType==\"Test\")\n  emit([doc.org], doc);\n}"}, "siteMap": {"map": "function (doc, meta) {\n  /*if(doc.docType==\"MfrProCatCity\"){\n    emit(\"https://www.wishkarma.com/d/ProductsbyLocation/\"+doc.mfrprocatcity.replace(/\\s/g,\"\")+\"/\"+meta.id+\"?&s=MfrProCatCity\");\n  }*/\n  /*if(doc.docType==\"ProductCategory\"){\n    emit(\"https://www.wishkarma.com/d/ProductCategories/\"+doc.categoryName.replace(/\\s/g,\"\")+\"/\"+meta.id+\"?&s=ProductCategory\");\n  }*/\n  if(doc.docType==\"MfrProCatCitySupplier\"){\n  \nemit([doc.ProductCategory,doc.City,doc.categoryName+\" \"+doc.cityName],1)  \n  \n  }\n}"}}}, "meta": {"rev": "1-395430c4", "id": "_design/dev_Test"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fdev_UpdationScriptViews/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fdev_UpdationScriptViews/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"recordId": {"map": "function (doc, meta) {\n  emit(meta.id, null);\n}"}, "nocolor": {"map": "/*doc.productType==\"Fabric\" ||\ndoc.productType==\"Laminate\" ||\ndoc.productType==\"Veneer\" ||\ndoc.productType==\"Flooring\" ||\n\t\ndoc.docType==\"Product\" && \n\t\t   (doc.productType==\"FloorTile\" ||\n\t\t\tdoc.productType==\"WallTile\" ||\n\t\t\tdoc.productType==\"Wallpapers\" ||\n\t\t\tdoc.productType==\"NaturalStone\" ||\n\t\t\tdoc.productType==\"Plywood\" )\n*/\nfunction (doc, meta) {\n   if(Array.isArray(doc.productImages)){\n\t   //if(!dependentProperties.color)\n     for(var i=0 ;i< doc.productImages.length;i++)\n       if(doc.productImages[i].dependentProperties)\n  \temit(1,doc);\n  }\n}"}, "dateUpdate": {"map": "function (doc, meta) {\n  if(doc.dateCreated.match(/\\d\\d\\/\\d\\d\\/\\d\\d\\d\\d\\s\\d\\d:\\d\\d IST/) || \n    doc.dateModified.match(/\\d\\d\\/\\d\\d\\/\\d\\d\\d\\d\\s\\d\\d:\\d\\d IST/) )\n  emit(doc.dateCreated,doc);\n}"}}}, "meta": {"rev": "1-79f79ae4", "id": "_design/dev_UpdationScriptViews"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fdev_User/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fdev_User/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"UserByEmail": {"map": "function (doc, meta) {\n  if(doc.docType==\"User\")\n    emit(doc.email.toLowerCase(), doc);\n} "}, "UserPassword": {"map": "function (doc, meta) {\n  if(doc.docType==\"User\" && doc.loginId!=\"\")\n    emit(doc.loginId, {loginPassword:doc.loginPassword});\n} "}, "uniqueUserName": {"map": "function (doc, meta) {\n  if(doc[\"@uniqueUserName\"]){\n  \temit(doc[\"@uniqueUserName\"].toUpperCase().trim(),meta.id);\n  }\n}"}, "userStatus": {"map": "function (doc, meta) {\n    if(doc.docType==\"User\"){\n      emit(doc.dateCreated, {loggedInCount:doc.loggedInCount,lastLoggedIn:doc.lastLoggedIn,email:doc.email,name:doc.givenName+\" \"+doc.familyName});\n    }\n}"}, "summary": {"map": "function (doc, meta) {\n  if(doc.docType==\"User\"){\n    var value= {\"image\":doc.image,\"givenName\":doc.givenName,\"familyName\":doc.familyName,\"email\":doc.email,\"socialIdentity\":doc.socialIdentity,\"createdVia\":doc.createdVia,\"subscribe\":doc.subscribe,\"notify\":doc.notify}\n   emit([\"public\",doc.givenName],value);\n  emit([\"admin\",doc.givenName],value);\n    emit(meta.id,value);\n  \n     }\n}"}, "getUniqueUserName": {"map": "function (doc, meta) {\n  if(doc[\"@uniqueUserName\"]){\n  \temit(meta.id,doc[\"@uniqueUserName\"]);\n  }\n}"}, "UserImage": {"map": "function (doc, meta) {\n  if(doc.docType==\"User\")\n    emit(doc.recordId, {image:doc.image});\n} "}, "UserDetail": {"map": "function (doc, meta) {\n  if(doc.docType==\"User\")\n    emit(meta.id, {\"givenName\":doc.givenName,\"familyName\":doc.familyName,\"about\":doc.about,\"email\":doc.email,\"telephone\":doc.telephone,\"address\":doc.address,\"image\":doc.image,\"coverImage\":doc.coverImage});\n} "}, "UserByLoginId": {"map": "function (doc, meta) { \n  if(doc.docType==\"User\" && doc.loginId && doc.loginId!=\"\") \n    emit(doc.loginId, doc);\n} \n"}}}, "meta": {"rev": "1-5255f709", "id": "_design/dev_User"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fdev_UserRole/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fdev_UserRole/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"allUserRoles": {"map": "function (doc, meta) {\n  if(doc.docType==\"UserRole\")\n    if(Array.isArray(doc.roles)){\n       emit([doc.cloudPointHostId,doc.User], {org:doc.org,roles:doc.roles});\n    }else{\n       emit([doc.cloudPointHostId,doc.User], {org:doc.org,roles:[doc.roles]});\n    }\n}\n"}, "allOrgs": {"map": "function (doc, meta) {\n  if(doc.docType==\"UserRole\" && doc.org)\n    emit([doc.cloudPointHostId],doc.org);\n}", "reduce": "function(key, values, rereduce){\n  if(!rereduce){\n  \tvar orgs = [];\n  \tfor(i=0; i<values.length; i++)\n  \t{\n  \t  if(orgs.indexOf(values[i])==-1)\n  \t  orgs.push(values[i]);\n  \t}\n  \treturn orgs;\n  }else{\n   \tvar orgs=[];\n    for(j=0;j<values.length;j++){\n      for(var k=0;k<values[j].length;k++){\n         if(orgs.indexOf(values[j][k])==-1)\n  \t  orgs.push(values[j][k]);\n      }\n    }\n    \n    return orgs;\n  }\n}"}, "summary": {"map": "function (doc, meta) {\n  if(doc.docType==\"UserRole\"){\n    var value= {User:doc.User,org:doc.org,\n                roles:doc.roles,\n                \"@uniqueUserName\":doc[\"@uniqueUserName\"],\n                record_header:doc.record_header}\n    \n        emit([doc.org?doc.org:\"public\",doc.org],value);\n    if(doc[\"$status\"]==\"published\" && doc.org!=\"public\"){\n     \temit([\"public\",doc.org],value); \n    }\n    emit(meta.id,value);\n    \n  }\n} \n"}, "UserRoles": {"map": "function (doc, meta) {\n  if(doc.docType==\"UserRole\" && doc[\"$status\"]==\"published\"){\n    if(Array.isArray(doc.roles)){\n      emit([doc.cloudPointHostId,doc.User], {org:doc.org,roles:doc.roles});\n     }else{\n      emit([doc.cloudPointHostId,doc.User], {org:doc.org,roles:[doc.roles]});\n    }\n  }\n}\n"}, "UserRolesOnOrg": {"map": "function (doc, meta) {\n  if(doc.docType==\"UserRole\" && doc[\"$status\"]==\"published\")\n    if(Array.isArray(doc.roles)){\n     emit([doc.cloudPointHostId,doc.User,doc.org], doc.roles);\n    }else{\n      emit([doc.cloudPointHostId,doc.User,doc.org], [doc.roles]);\n    }\n}"}}}, "meta": {"rev": "1-d3fa6c56", "id": "_design/dev_UserRole"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fdev_discover/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fdev_discover/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"getUniqueUserName": {"map": "function (doc, meta) {\n  if(doc.docType==\"Discover\")\n  emit(doc[\"@uniqueUserName\"], doc.searchText);\n}"}, "checkUniqueUserName": {"map": "function (doc, meta) {\n  if(doc.docType==\"Discover\")\n  emit( doc.searchText,doc[\"@uniqueUsername\"]);\n}"}}}, "meta": {"rev": "1-e1c43724", "id": "_design/dev_discover"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fdev_explore/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fdev_explore/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"getUniqueUserName": {"map": "function (doc, meta) {\n  if(doc.docType==\"Explore\")\n  emit(doc[\"@uniqueUserName\"], doc.searchText);\n}"}, "checkUniqueUserName": {"map": "function (doc, meta) {\n  if(doc.docType==\"Explore\")\n  emit( doc.searchText,doc[\"@uniqueUsername\"]);\n}"}}}, "meta": {"rev": "1-bc98d808", "id": "_design/dev_explore"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fdev_relation/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fdev_relation/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"checkRelated": {"map": "function (doc, meta) {\n  if(doc[\"relationDesc\"]){\n    for(var i=0;i<doc.relationDesc.length;i++){\n      if(doc[doc.relationDesc[i].split(\"-\")[0]] &&\n         doc[doc.relationDesc[i].split(\"-\")[0]]!=\"\"){\n      \temit([doc[doc.relationDesc[i].split(\"-\")[0]],doc.relationDesc[i].split(\"-\")[1],\n           doc[doc.relationDesc[i].split(\"-\")[2]]],null);    \n    \t}\n    }\n  }\n}"}, "getRelated": {"map": "function (doc, meta) {\n  if(doc.author && doc.author!=\"\"){\n  \temit([doc.author,\"owns\"+doc.docType],doc.recordId)\n  }\n  \n  if(doc[\"relationDesc\"]){\n    for(var i=0;i<doc.relationDesc.length;i++){\n      if(doc[doc.relationDesc[i].split(\"-\")[0]] && \n         doc[doc.relationDesc[i].split(\"-\")[0]]!=\"\"){\n      \temit([doc[doc.relationDesc[i].split(\"-\")[0]],doc.relationDesc[i].split(\"-\")[1]],\n           meta.id);//doc[doc.relationDesc[i].split(\"-\")[2]]    \n    \t}\n    }\n  }\n}", "reduce": "_count"}}}, "meta": {"rev": "1-664fa264", "id": "_design/dev_relation"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fdev_uniqueUserName/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fdev_uniqueUserName/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"uniqueUserName": {"map": "function (doc, meta) {\n  if(doc.docType==\"uniqueUserName\")\n  emit(doc.type, null);\n}"}}}, "meta": {"rev": "1-9f4ea865", "id": "_design/dev_uniqueUserName"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fdiscover/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fdiscover/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"getUniqueUserName": {"map": "function (doc, meta) {\n  if(doc.docType==\"Discover\")\n  emit(doc[\"@uniqueUserName\"], doc.searchText);\n}"}, "checkUniqueUserName": {"map": "function (doc, meta) {\n  if(doc.docType==\"Discover\")\n  emit( doc.searchText,doc[\"@uniqueUsername\"]);\n}"}}}, "meta": {"rev": "1-4504838b", "id": "_design/discover"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Fexplore/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Fexplore/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"getUniqueUserName": {"map": "function (doc, meta) {\n  if(doc.docType==\"Explore\")\n  emit(doc[\"@uniqueUserName\"], doc.searchText);\n}"}, "checkUniqueUserName": {"map": "function (doc, meta) {\n  if(doc.docType==\"Explore\")\n  emit( doc.searchText,doc[\"@uniqueUsername\"]);\n}"}}}, "meta": {"rev": "1-2554cee7", "id": "_design/explore"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2FgetDoc/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2FgetDoc/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"getDocsList": {"map": "function (doc, meta) {\n  if(doc.docType)\n  emit(doc.docType, doc);\n}"}}}, "meta": {"rev": "1-e8a94b20", "id": "_design/getDoc"}}}, {"controllers": {"compact": "/pools/default/buckets/records/ddocs/_design%2Frelation/controller/compactView", "setUpdateMinChanges": "/pools/default/buckets/records/ddocs/_design%2Frelation/controller/setUpdateMinChanges"}, "doc": {"json": {"views": {"checkRelated": {"map": "function (doc, meta) {\n  if(doc[\"relationDesc\"]){\n    for(var i=0;i<doc.relationDesc.length;i++){\n      if(doc[doc.relationDesc[i].split(\"-\")[0]] &&\n         doc[doc.relationDesc[i].split(\"-\")[0]]!=\"\"){\n      \temit([doc[doc.relationDesc[i].split(\"-\")[0]],doc.relationDesc[i].split(\"-\")[1],\n           doc[doc.relationDesc[i].split(\"-\")[2]]],null);    \n    \t}\n    }\n  }\n}"}, "getRelated": {"map": "function (doc, meta) {\n  if(doc.author && doc.author!=\"\"){\n  \temit([doc.author,\"owns\"+doc.docType],doc.recordId)\n  }\n  \n  if(doc[\"relationDesc\"]){\n    for(var i=0;i<doc.relationDesc.length;i++){\n      if(doc[doc.relationDesc[i].split(\"-\")[0]] && \n         doc[doc.relationDesc[i].split(\"-\")[0]]!=\"\"){\n      \temit([doc[doc.relationDesc[i].split(\"-\")[0]],doc.relationDesc[i].split(\"-\")[1]],\n           meta.id);//doc[doc.relationDesc[i].split(\"-\")[2]]    \n    \t}\n    }\n  }\n}", "reduce": "_count"}}}, "meta": {"rev": "1-aeb1f084", "id": "_design/relation"}}}]